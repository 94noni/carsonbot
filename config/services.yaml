# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    symfony_docs_secret: '%env(SYMFONY_DOCS_SECRET)%'

imports:
    - { resource: github.yml }

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Subscriber,Issues,Entity,Migrations,Event,Tests,Kernel.php,GitHubEvents.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    Github\Api\Issue:
        factory: ['@Github\Client', api]
        arguments: [issue]

    Github\Api\Issue\Labels:
        factory: ['@Github\Api\Issue', labels]

    App\Issues\GitHub\CachedLabelsApi: ~

    App\Issues\GitHub\GitHubStatusApi: ~

    App\Issues\StatusApi:
        alias: App\Issues\GitHub\GitHubStatusApi

    App\Issues\GitHubRequestHandler:
        $container: '@service_container'

    App\Repository\Provider\InMemoryRepositoryProvider:
        arguments: [ '%repositories%' ]

    App\Repository\Provider\RepositoryProviderInterface:
        alias: App\Repository\Provider\InMemoryRepositoryProvider
